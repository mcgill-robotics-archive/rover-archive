<launch>
  <!--~~~~~~~~~~~~~~~~~~~~~
  Robot localization nodes.
  ~~~~~~~~~~~~~~~~~~~~~~-->
  <!--
    Launch Unscented Kalman Filter through robot_localization.
    This node is for local state estimation.
  -->
  <node pkg="robot_localization" type="ukf_localization_node"
      name="local_odometry_node">
    <param name="world_frame" value="odom" />
    <param name="frequency" value="10" />
    <param name="two_d_mode" value="true" />
    <remap from="/odometry/filtered" to="/odometry/filtered/local" />


    <!-- Wheel odometry configuration. -->
    <param name="twist0" value="/wheel_odom/wheel_velocity" />
    <rosparam param="twist0_config">[false, false, false,
                                    false, false, false,
                                    true, true, true,
                                    false, false, true,
                                    false, false, false]</rosparam>

    <param name="pose0" value="/ahrs_manager/pose" />
    <rosparam param="pose0_config">[false, false, false,
                                   true, true, true,
                                   false, false, false,
                                   false, false, false,
                                   false, false, false]</rosparam>
  </node>

  <!--
    Launch Unscented Kalman Filter through robot_localization.
    This node is for global state estimation.
  -->
  <node pkg="robot_localization" type="ukf_localization_node"
      name="global_odometry_node">
    <param name="world_frame" value="map" />
    <param name="frequency" value="100" />
    <param name="two_d_mode" value="true" />
    <remap from="/odometry/filtered" to="/odometry/filtered/global" />

    <!-- Wheel odometry configuration. -->
    <param name="twist0" value="/wheel_odom/wheel_velocity" />
    <rosparam param="twist0_config">[false, false, false,
                                    false, false, false,
                                    true, true, true,
                                    false, false, true,
                                    false, false, false]</rosparam>

    <param name="pose0" value="/ahrs_manager/pose" />
    <rosparam param="pose0_config">[false, false, false,
                                   false, false, true,
                                   false, false, false,
                                   false, false, false,
                                   false, false, false]</rosparam>
    <param name="pose0_differential" value="true" />

    <!-- NavSat GPS input. -->
    <param name="odom0" value="/odometry/filtered/global" />
    <rosparam param="odom0_config">[true, true, true,
                                    false, false, false,
                                    false, false, false,
                                    false, false, false,
                                    false, false, false]</rosparam>

    <!-- IMU input. -->
    <param name="imu0" value="/ahrs_manager/imu" />
    <rosparam param="imu0_config">[false, false, false,
                                   true, true, true,
                                   false, false, false,
                                   true, true, true,
                                   true, true, true]</rosparam>
  </node>

  <!-- The navsat transform node fuses GPS data to produce an odom message. -->
  <node pkg="robot_localization" type="navsat_transform_node"
      name="navsat_transform_node" respawn="true">
    <param name="magnetic_declination_radians" value="0.0872" />
    <rosparam param="datum">[38.33, -111.01, 0.0, map, base_link]</rosparam>
    <remap from="/imu/data" to="/ahrs_manager/imu" />
    <remap from="/gps/fix" to="/ahrs_manager/gps" />
    <remap from="/odometry/filtered" to="/odometry/filtered/global" />
  </node>


  <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    The rest of this launch file is for launching required nodes that are not
    necessarily robot_localization nodes.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
  <!-- Launch the wheel encoder firmware node. -->
  <node pkg="rosserial_python" type="serial_node.py" name="drive_encoders"
      args="/dev/drive_middle" output="screen" respawn="true" />

  <!-- Launch the wheel odometry calculation node. -->
  <node pkg="odometry" type="wheel_odom.py" name="wheel_odom" />

  <!-- Launch the AHRS aquisition launch file. -->
  <include file="$(find ahrs)/launch/ahrs.launch" />

  <!--
    This manages the conversion of all AHRS data into usefull messages for
    input to the state estimation nodes.
  -->
  <node pkg="odometry" type="ahrs_manager.py" name="ahrs_manager">
    <param name="ahrs_local_frame" value="local_ahrs_orientation" />
    <param name="ahrs_global_frame" value="global_ahrs_orientation" />
  </node>
</launch>
